version: "3.7"

services:
  application:
    container_name: ${_Values_root_name}-application
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
    command:
      - --email-domain=*
#      - --insecure-oidc-skip-issuer-verification=true
    restart: 'no'
    ports:
      - "4180:4180"
    environment:
      #application
      TZ: Europe/Berlin

      # oauth2proxy generic config
      OAUTH2_PROXY_UPSTREAM: "file:///dev/null"
      OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
      OAUTH2_PROXY_REVERSE_PROXY: "true"
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"

      # oauth2proxy provider config
      OAUTH2_PROXY_PROVIDER: "oidc"
      OAUTH2_PROXY_CLIENT_ID: "oauth2-proxy"
      OAUTH2_PROXY_SKIP_OIDC_DISCOVERY: "true"

#      OAUTH2_PROXY_REDIRECT_URL: "http://localhost:8080/oauth2/callback"
      OAUTH2_PROXY_REDIRECT_URL: "http://localhost:4180/oauth2/callback"
      OAUTH2_PROXY_LOGIN_URL: "http://localhost:30200/oauth2/auth"

      OAUTH2_PROXY_OIDC_ISSUER_URL: "http://host.docker.internal:30200"
      OAUTH2_PROXY_REDEEM_URL: "http://host.docker.internal:30200/oauth2/token"
      OAUTH2_PROXY_OIDC_JWKS_URL: "http://host.docker.internal:30200/oauth2/certs"

      OAUTH2_PROXY_CLIENT_SECRET: none
      # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
      OAUTH2_PROXY_COOKIE_SECRET: SvJIUgqBKxOYSxJwFREiOg==

    networks:
      - ${_Values_root_name}-net

  authserver:
    container_name: ${_Values_root_name}-authserver
    image: goafabric/spring-auth-server-native${_Values_server_arch}:1.0.1-SNAPSHOT
    restart: 'no'
    ports:
      - "30200:30200"
    command: ["-Xmx${_Values_resources_requests_memory}"]
    environment:
      spring.security.authorization.base-uri: "/oauth2"
      spring.security.authorization.clients: "oauth2-proxy:none"
      spring.security.authorization.users: "user1:user1,user2:user2,user3:user3,user4:user4"
    networks:
      - ${_Values_root_name}-net


volumes:
    tmp:
    applogs:
    pgdata:

networks:
  oauth2proxy-net:
    driver: bridge